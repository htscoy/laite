import{jsx as r,jsxs as g}from"react/jsx-runtime";import{createFormHook as F,createFormHookContexts as S}from"@tanstack/react-form";import{z as l}from"zod";import{startSerializer as c,mergeHeaders as f,createServerFn as w}from"@tanstack/start-client-core";import{isPlainObject as x,encode as N,isRedirect as _,isNotFound as j}from"@tanstack/router-core";import{getHeaders as C,getEvent as T}from"@tanstack/start-server-core";function b({type:e,label:t,...n}){return g("div",{className:"py-2 flex flex-col",children:[r("label",{children:t}),r("input",{...n,type:e,className:"border rounded-sm py-2 px-1"})]})}function D(e){return r(b,{...e,type:"number"})}function R(e){return r(b,{...e,type:"text"})}function E({type:e="submit",children:t,...n}){return r("button",{...n,type:e,children:t})}async function G(e,t,n){var s;const d=t[0];if(x(d)&&d.method){const o=d,p=o.data instanceof FormData?"formData":"payload",m=new Headers({...p==="payload"?{"content-type":"application/json",accept:"application/json"}:{},...o.headers instanceof Headers?Object.fromEntries(o.headers.entries()):o.headers});if(o.method==="GET"){const a=N({payload:c.stringify({data:o.data,context:o.context})});a&&(e.includes("?")?e+=`&${a}`:e+=`?${a}`)}e.includes("?")?e+="&createServerFn":e+="?createServerFn",o.response==="raw"&&(e+="&raw");const y=await n(e,{method:o.method,headers:m,signal:o.signal,...H(o)}),h=await v(y);if((s=h.headers.get("content-type"))!=null&&s.includes("application/json")){const a=c.decode(await h.json());if(_(a)||j(a)||a instanceof Error)throw a;return a}return h}const u=await v(await n(e,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(t)})),i=u.headers.get("content-type");return i&&i.includes("application/json")?c.decode(await u.json()):u.text()}function H(e){return e.method==="POST"?e.data instanceof FormData?(e.data.set("__TSR_CONTEXT",c.stringify(e.context)),{body:e.data}):{body:c.stringify({data:e.data??null,context:e.context})}:{}}async function v(e){if(!e.ok){const t=e.headers.get("content-type");throw t&&t.includes("application/json")?c.decode(await e.json()):new Error(await e.text())}return e}function O(e){return e.replace(/^\/|\/$/g,"")}const A=(e,t)=>{const n=`/${O(t)}/${e}`;return Object.assign((...d)=>G(n,d,async(u,i)=>{i.headers=f(C(),i.headers);const o=await $fetch.native(u,i),p=T(),m=f(o.headers,p.___ssrRpcResponseHeaders);return p.___ssrRpcResponseHeaders=m,o}),{url:n,functionId:e})},P=A("src_actions_addDeviceFn_ts--addDevice_createServerFn_handler","/_server"),$=w({method:"POST"}).validator(e=>{if(console.log(e),!(e instanceof FormData))throw new Error("Invalid form data");const t=e.get("serialNumber"),n=e.get("productGroup"),s=e.get("deviceName");if(!t||!n||!s)throw new Error("serialNumber and productGroup are required");return{serialNumber:t.toString(),productGroup:n.toString(),deviceName:s.toString()}}).handler(P),{fieldContext:I,formContext:k}=S(),{useAppForm:z}=F({fieldComponents:{TextInput:R,NumberInput:D},formComponents:{SubmitButton:E},fieldContext:I,formContext:k}),B=()=>{const e=z({defaultValues:{serialNumber:"",productGroup:"",deviceName:""},validators:{onChange:l.object({serialNumber:l.string(),productGroup:l.string(),deviceName:l.string()})},onSubmit:async({value:t})=>{const n=await $({data:t});console.log(n)}});return g("form",{onSubmit:t=>{t.preventDefault(),e.handleSubmit()},method:"post",children:[r("h1",{children:"Add device"}),r(e.AppField,{name:"deviceName",children:t=>r(t.TextInput,{value:t.state.value,onChange:n=>t.handleChange(n.target.value),label:"Device Name"})}),r(e.AppField,{name:"serialNumber",children:t=>r(t.TextInput,{value:t.state.value,onChange:n=>t.handleChange(n.target.value),label:"Serial Number"})}),r(e.AppField,{name:"productGroup",children:t=>r(t.TextInput,{value:t.state.value,onChange:n=>t.handleChange(n.target.value),label:"Product Group"})}),r(e.AppForm,{children:r(e.SubmitButton,{children:"Submit"})})]})},M=function(){return r(B,{})};export{M as component};
